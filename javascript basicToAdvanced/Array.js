//linear collection of things
let arrNames=['snobbar','nargis','sadath','najma',1,2,3,4];
console.log(arrNames)
console.log(arrNames[2]);
console.log(arrNames[-1]);
console.log(arrNames[5]);
console.log(arrNames.length);
console.log(typeof(arrNames));
console.log(arrNames[0][0]);//letter ist of ist index 
console.log(arrNames[0][1]);
console.log(arrNames[0].length);


//arrays are MUTABLE
let fruitsArr=['mango','banana','orange'];
console.log(fruitsArr);
console.log(fruitsArr.length);
console.log(fruitsArr[0]='pineApple');
console.log(fruitsArr[10]='watermelon');
console.log(fruitsArr);
console.log(fruitsArr.length);
console.log(fruitsArr[5]);//will be counted but will be undefined

//array methods--push ,pop,shift,unshift
cars=['audi','bmw','xuv','maruti'];
console.log(cars);
console.log(cars.push('toyota'));//pushes at the end
console.log(cars);
console.log(cars.pop());//pops from the end
console.log(cars);
console.log(cars.unshift('toyota'));//pushes at the beginning
console.log(cars);
console.log(cars.shift());//pops from the beginig
console.log(cars);
let start=['january','july','march','august'];
console.log(start);
console.log(start.shift());
console.log(start);
console.log(start.shift());
console.log(start);
console.log(start.unshift('june'));
console.log(start.unshift('july'));
console.log(start);

//indexOf method returns index of something
//includes method search for a value(returns true or false)
let candidates=['snobbar','nargis','sadath','irtika'];
console.log(candidates.indexOf('sadath'));
console.log(candidates.indexOf('najma'));//will give -1(undefined)
console.log(candidates.includes('sadath'));
console.log(candidates.includes('sania'));


let colors1=['red','blue','green'];
let colors2=['orange','violet','purpel'];
allColors=colors1.concat(colors2);
console.log(allColors);
console.log(allColors.reverse());
allColors=colors2.concat(colors1);
console.log(allColors);

//slice method in arrays---copies a portion of an array(here originalarray will not be effected)
let myColors=['red','green','blue','purpel','violet','indigo'];
console.log(myColors.slice());
console.log(myColors.slice(2));
console.log(myColors.slice(-3));
console.log(myColors.slice(2,10));
console.log(myColors.slice(-2,4));

//SPLICE METHOD IN ARRAY REMOVES /REPLACES/ADD ELEMENTS IN PLACE(original array gets changed accordingly in case of splice)
//splice(start,deleteCount,item0,item1...item n)
console.log(myColors.splice(3));//it will act same like slice method here
console.log(myColors.splice(0,1));//at index 0,delete 1 item
console.log(myColors.slice());
console.log(myColors.splice(0,2,'yellow','orange'));//from index 0, deleete 2 items and add yellow 
console.log(myColors);
console.log(myColors.push('white'));
console.log(myColors.push('black'));
console.log(myColors.push('green'));
console.log(myColors.splice(1,1,'purpel'));//delete 1 element at intex 1and add purpel over there
console.log(myColors.splice(0,0,'indigo'));//delete no elemts and add indigo at 0 intex
console.log(myColors);
console.log(myColors.splice(3,0,'blue','violet'));//at index 3 add blue,violet on delting nothing
console.log(myColors);
console.log(myColors.splice(1,1,'orange'));//replace yellow with orange
console.log(myColors);

//sort method :sorts an array.....works good on sorting strings and chars
let chars=['a','g','d','w','b'];
console.log(chars.sort());
let strs=["Snobbar",'Aasif',"Touseef"];
console.log(strs.sort());
let nums=[5,1,100,60,2,21,59];
console.log(nums.sort());//not working on nums

//Qs 1:for a given start state of an array,change it to final form using splice
//start:['january','july','march','august']
//final:['july','june','march','august']
let months=['january','july','march','august'];
console.log(months);
months.splice(0,2,'july','june');
console.log(months);

//Qs2:Return the index of jvascript from the given array,if it was reversed
//['c','c++','html','javascript','python','java','c#','sql']
let languages=['c','c++','html','javascript','python','java','c#','sql'];
let getJs=languages.reverse().indexOf('javascript');
console.log("index of javaScript:"+getJs);

//Array refrences/addresses
console.log([1]==[1]);
console.log([]==[]);
let numss=[1,2,3];//here numss is not a normal variable ,it contins address
//we can create a copy of a refence variable numss ,they will reflect the sam ememory location
let numssCopy=numss;
console.log(numssCopy.push(6));
console.log(numss);
console.log(numssCopy);
console.log(numss==numssCopy)
console.log(numss.push(4));
console.log(numss.push(8));
console.log(numssCopy);
console.log(numss.pop());
console.log(numss);


//CONST arrays---we cannot assign newarray into an array when it is const,but we can impliment it by applying methods
console.log("const arrays")
const arr=[1,2,3,4];
console.log(arr);
arr.push(5);
arr.push(6);
console.log(arr);
arr.pop();
console.log(arr);


//nested arrays/multidimention arrays/array of array
let numbers=[[1,2],[4,6],[12,42]];
console.log(numbers);
console.log(numbers.length);
console.log(numbers[1,1]);
console.log(numbers[1].length);
console.log(numbers);
console.log(numbers.push([3,8]));
console.log(numbers);

//Qs practice Tic Tac TOe
let arrT=[["x","null","O"],["null","x","null"],["O","null","x"]];
console.log(arrT);

arrT[0][1]="O";
console.log(arrT);

























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































